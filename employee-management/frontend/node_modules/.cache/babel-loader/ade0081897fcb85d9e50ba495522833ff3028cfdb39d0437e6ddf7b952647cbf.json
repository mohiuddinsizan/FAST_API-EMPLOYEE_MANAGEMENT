{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\PycharmProjects\\\\Abrar\\\\employee-management\\\\frontend\\\\src\\\\EmployeeList.js\",\n  _s = $RefreshSig$();\n//import React, { useState, useEffect } from 'react';\n//import axios from 'axios';\n//import { ToastContainer, toast } from 'react-toastify';\n//import 'react-toastify/dist/ReactToastify.css';\n//import './EmployeeList.css';\n//\n//const EmployeeList = () => {\n//  const [employees, setEmployees] = useState([]);\n//  const [isEditing, setIsEditing] = useState(false);\n//  const [currentEmployee, setCurrentEmployee] = useState({\n//    id: null,\n//    name: '',\n//    age: '',\n//    department: ''\n//  });\n//\n//  // Fetch all employees from the backend\n//  useEffect(() => {\n//    fetchEmployees();\n//  }, []);\n//\n//  // Fetch employees from backend\n//  const fetchEmployees = () => {\n//    axios.get('http://localhost:8000/employees/')\n//      .then(response => {\n//        setEmployees(response.data);\n//      })\n//      .catch(error => {\n//        console.error('There was an error fetching the employees!', error);\n//        toast.error('Failed to fetch employees!');\n//      });\n//  };\n//\n//  // Delete an employee\n//  const handleDelete = (id) => {\n//    axios.delete(`http://localhost:8000/employees/${id}`)\n//      .then(() => {\n//        setEmployees(employees.filter(employee => employee.id !== id));\n//        toast.success('Employee deleted successfully!');\n//      })\n//      .catch(error => {\n//        console.error('There was an error deleting the employee!', error);\n//        toast.error('Failed to delete employee!');\n//      });\n//  };\n//\n//  // Handle updating an employee\n//  const handleUpdate = (employee) => {\n//    setIsEditing(true);\n//    setCurrentEmployee({\n//      id: employee.id,\n//      name: employee.name,\n//      age: employee.age,\n//      department: employee.department\n//    });\n//  };\n//\n//  // Open modal for adding new employee\n//  const handleOpenAddModal = () => {\n//    handleClearForm();\n//    setIsEditing(true);\n//  };\n//\n//  // Submit the updated employee info\n//  const handleSubmitUpdate = (e) => {\n//    e.preventDefault();\n//    const { id, name, age, department } = currentEmployee;\n//\n//    // Convert age to number\n//    const ageNumber = parseInt(age, 10);\n//\n//    // Client-side validation first\n//    if (isNaN(ageNumber) || ageNumber < 16) {\n//      toast.error('Employee must be at least 16 years old.');\n//      return;\n//    }\n//\n//    // Proceed with updating employee\n//    axios.put(`http://localhost:8000/employees/${id}`, {\n//      name,\n//      age: ageNumber,\n//      department\n//    })\n//    .then(response => {\n//      // Refresh the employee list\n//      fetchEmployees();\n//\n//      // Reset editing state\n//      setIsEditing(false);\n//\n//      // Success notification\n//      toast.success('Employee updated successfully!');\n//    })\n//    .catch(error => {\n//      // Detailed error handling\n//      if (error.response) {\n//        const errorMessage = error.response.data.detail || 'Failed to update employee!';\n//        toast.error(errorMessage);\n//        console.error('Server Error:', error.response.data);\n//      } else if (error.request) {\n//        toast.error('No response received from server');\n//        console.error('No response Error:', error.request);\n//      } else {\n//        toast.error('Error setting up the request');\n//        console.error('Error:', error.message);\n//      }\n//    });\n//  };\n//\n//  // Handle adding new employee\n//  const handleSubmitAdd = (e) => {\n//    e.preventDefault();\n//    const { name, age, department } = currentEmployee;\n//\n//    // Convert age to number\n//    const ageNumber = parseInt(age, 10);\n//\n//    // Client-side validation first\n//    if (isNaN(ageNumber) || ageNumber < 16) {\n//      toast.error('Employee must be at least 16 years old.');\n//      return;\n//    }\n//\n//    axios.post('http://localhost:8000/employees/', { name, age: ageNumber, department })\n//      .then(response => {\n//        fetchEmployees();\n//        setIsEditing(false);\n//        toast.success('Employee added successfully!');\n//      })\n//      .catch(error => {\n//        console.error('There was an error adding the employee!', error);\n//\n//        // Comprehensive error handling\n//        if (error.response) {\n//          // The request was made and the server responded with a status code\n//          // that falls out of the range of 2xx\n//          if (error.response.status === 422) {\n//            // Validation error from Pydantic\n//            const errorDetails = error.response.data;\n//            const errorMessage = errorDetails.detail[0].msg || 'Validation failed';\n//            toast.error(errorMessage);\n//          } else {\n//            // Other HTTP error responses\n//            const errorMessage = error.response.data.detail || 'Failed to add employee!';\n//            toast.error(errorMessage);\n//          }\n//          console.error('Server Error:', error.response.data);\n//        } else if (error.request) {\n//          // The request was made but no response was received\n//          toast.error('No response received from server');\n//          console.error('No response Error:', error.request);\n//        } else {\n//          // Something happened in setting up the request that triggered an Error\n//          toast.error('Error setting up the request');\n//          console.error('Error:', error.message);\n//        }\n//      });\n//  };\n//\n//  // Handle input changes in the form\n//  const handleChange = (e) => {\n//    const { name, value } = e.target;\n//    setCurrentEmployee(prevState => ({\n//      ...prevState,\n//      [name]: value\n//    }));\n//  };\n//\n//  // Handle clearing the form fields\n//  const handleClearForm = () => {\n//    setCurrentEmployee({\n//      id: null,\n//      name: '',\n//      age: '',\n//      department: ''\n//    });\n//    setIsEditing(false);\n//  };\n//\n//  return (\n//    <div className='employee-list-container'>\n//      <h2 className='employee-list-heading'>Employee List</h2>\n//\n//      {/* Employee List */}\n//      <div className='employee-cards-container'>\n//        {employees.map(employee =>\n//          <div key={employee.id} className='employee-card'>\n//            <h3>{employee.name}</h3>\n//            <p><strong>ID: </strong>{employee.id}</p>\n//            <p><strong>Age: </strong>{employee.age}</p>\n//            <p><strong>Department: </strong>{employee.department}</p>\n//            <div className='employee-card-actions'>\n//              <button\n//                className='btn-delete'\n//                onClick={() => handleDelete(employee.id)}\n//              >\n//                Delete\n//              </button>\n//              <button\n//                className='btn-update'\n//                onClick={() => handleUpdate(employee)}\n//              >\n//                Update\n//              </button>\n//            </div>\n//          </div>\n//        )}\n//      </div>\n//\n//      {/* Edit or Add Form Modal */}\n//      {isEditing &&\n//        <div className='modal'>\n//          <div className='modal-content'>\n//            <h3>{currentEmployee.id ? 'Edit Employee' : 'Add Employee'}</h3>\n//            <form onSubmit={currentEmployee.id ? handleSubmitUpdate : handleSubmitAdd}>\n//              <label>\n//                Name:\n//                <input\n//                  type='text'\n//                  name='name'\n//                  value={currentEmployee.name}\n//                  onChange={handleChange}\n//                  required\n//                />\n//              </label>\n//              <label>\n//                Age:\n//                <input\n//                  type='number'\n//                  name='age'\n//                  value={currentEmployee.age}\n//                  onChange={handleChange}\n//                  required\n//                  min='16'\n//                />\n//              </label>\n//              <label>\n//                Department:\n//                <input\n//                  type='text'\n//                  name='department'\n//                  value={currentEmployee.department}\n//                  onChange={handleChange}\n//                  required\n//                />\n//              </label>\n//              <div className='modal-buttons'>\n//                <button type='submit'>Save Changes</button>\n//                <button type='button' onClick={handleClearForm}>Clear</button>\n//                <button type='button' onClick={() => setIsEditing(false)}>Cancel</button>\n//              </div>\n//            </form>\n//          </div>\n//        </div>\n//      }\n//\n//      {/* Toast Notifications */}\n//      <ToastContainer position='top-right' autoClose={5000} hideProgressBar={false} />\n//    </div>\n//  );\n//};\n//\n//export default EmployeeList;\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './EmployeeList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeList = () => {\n  _s();\n  const [employees, setEmployees] = useState([]);\n  const [isEditing, setIsEditing] = useState(false);\n  const [currentEmployee, setCurrentEmployee] = useState({\n    id: null,\n    name: '',\n    age: '',\n    department: ''\n  });\n  useEffect(() => {\n    fetchEmployees();\n  }, []);\n  const fetchEmployees = () => {\n    axios.get('http://localhost:8000/employees/').then(response => setEmployees(response.data)).catch(() => toast.error('Failed to fetch employees!'));\n  };\n  const handleDelete = id => {\n    axios.delete(`http://localhost:8000/employees/deleteemployees/${id}`).then(() => {\n      setEmployees(employees.filter(emp => emp.id !== id));\n      toast.success('Employee deleted successfully!');\n    }).catch(() => toast.error('Failed to delete employee!'));\n  };\n  const handleUpdate = employee => {\n    setIsEditing(true);\n    setCurrentEmployee({\n      ...employee\n    });\n  };\n  const handleOpenAddModal = () => {\n    setCurrentEmployee({\n      id: null,\n      name: '',\n      age: '',\n      department: ''\n    });\n    setIsEditing(true);\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    const {\n      id,\n      name,\n      age,\n      department\n    } = currentEmployee;\n    const ageNumber = parseInt(age, 10);\n    if (isNaN(ageNumber) || ageNumber < 16 || ageNumber > 100) {\n      toast.error('Age must be between 16 and 100.');\n      return;\n    }\n    const apiCall = id ? axios.put(`http://localhost:8000/employees/updateemployees/${id}`, {\n      name,\n      age: ageNumber,\n      department\n    }) : axios.post(`http://localhost:8000/employees/addemployees/${id}`, {\n      name,\n      age: ageNumber,\n      department\n    });\n    apiCall.then(() => {\n      fetchEmployees();\n      setIsEditing(false);\n      toast.success(`Employee ${id ? 'updated' : 'added'} successfully!`);\n    }).catch(err => {\n      var _err$response, _err$response$data;\n      return toast.error(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.detail) || 'Operation failed!');\n    });\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setCurrentEmployee(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"employee-list-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Employee List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleOpenAddModal,\n      children: \"Add Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 340,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"employee-cards\",\n      children: employees.map(emp => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"employee-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: emp.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Age: \", emp.age]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Department: \", emp.department]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 347,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleUpdate(emp),\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(emp.id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 13\n        }, this)]\n      }, emp.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 7\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal-content\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"name\",\n            value: currentEmployee.name,\n            onChange: handleChange,\n            placeholder: \"Name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 358,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"age\",\n            value: currentEmployee.age,\n            onChange: handleChange,\n            placeholder: \"Age\",\n            required: true,\n            min: \"16\",\n            max: \"100\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"department\",\n            value: currentEmployee.department,\n            onChange: handleChange,\n            placeholder: \"Department\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 361,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setIsEditing(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 362,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 357,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 356,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {\n      position: \"top-right\",\n      autoClose: 5000\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 368,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 338,\n    columnNumber: 5\n  }, this);\n};\n_s(EmployeeList, \"qaXsI631sKHBK0bHPDLNHqQjS7Q=\");\n_c = EmployeeList;\nexport default EmployeeList;\nvar _c;\n$RefreshReg$(_c, \"EmployeeList\");","map":{"version":3,"names":["React","useState","useEffect","axios","ToastContainer","toast","jsxDEV","_jsxDEV","EmployeeList","_s","employees","setEmployees","isEditing","setIsEditing","currentEmployee","setCurrentEmployee","id","name","age","department","fetchEmployees","get","then","response","data","catch","error","handleDelete","delete","filter","emp","success","handleUpdate","employee","handleOpenAddModal","handleSubmit","e","preventDefault","ageNumber","parseInt","isNaN","apiCall","put","post","err","_err$response","_err$response$data","detail","handleChange","value","target","prev","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","onSubmit","type","onChange","placeholder","required","min","max","position","autoClose","_c","$RefreshReg$"],"sources":["C:/Users/DELL/PycharmProjects/Abrar/employee-management/frontend/src/EmployeeList.js"],"sourcesContent":["//import React, { useState, useEffect } from 'react';\r\n//import axios from 'axios';\r\n//import { ToastContainer, toast } from 'react-toastify';\r\n//import 'react-toastify/dist/ReactToastify.css';\r\n//import './EmployeeList.css';\r\n//\r\n//const EmployeeList = () => {\r\n//  const [employees, setEmployees] = useState([]);\r\n//  const [isEditing, setIsEditing] = useState(false);\r\n//  const [currentEmployee, setCurrentEmployee] = useState({\r\n//    id: null,\r\n//    name: '',\r\n//    age: '',\r\n//    department: ''\r\n//  });\r\n//\r\n//  // Fetch all employees from the backend\r\n//  useEffect(() => {\r\n//    fetchEmployees();\r\n//  }, []);\r\n//\r\n//  // Fetch employees from backend\r\n//  const fetchEmployees = () => {\r\n//    axios.get('http://localhost:8000/employees/')\r\n//      .then(response => {\r\n//        setEmployees(response.data);\r\n//      })\r\n//      .catch(error => {\r\n//        console.error('There was an error fetching the employees!', error);\r\n//        toast.error('Failed to fetch employees!');\r\n//      });\r\n//  };\r\n//\r\n//  // Delete an employee\r\n//  const handleDelete = (id) => {\r\n//    axios.delete(`http://localhost:8000/employees/${id}`)\r\n//      .then(() => {\r\n//        setEmployees(employees.filter(employee => employee.id !== id));\r\n//        toast.success('Employee deleted successfully!');\r\n//      })\r\n//      .catch(error => {\r\n//        console.error('There was an error deleting the employee!', error);\r\n//        toast.error('Failed to delete employee!');\r\n//      });\r\n//  };\r\n//\r\n//  // Handle updating an employee\r\n//  const handleUpdate = (employee) => {\r\n//    setIsEditing(true);\r\n//    setCurrentEmployee({\r\n//      id: employee.id,\r\n//      name: employee.name,\r\n//      age: employee.age,\r\n//      department: employee.department\r\n//    });\r\n//  };\r\n//\r\n//  // Open modal for adding new employee\r\n//  const handleOpenAddModal = () => {\r\n//    handleClearForm();\r\n//    setIsEditing(true);\r\n//  };\r\n//\r\n//  // Submit the updated employee info\r\n//  const handleSubmitUpdate = (e) => {\r\n//    e.preventDefault();\r\n//    const { id, name, age, department } = currentEmployee;\r\n//\r\n//    // Convert age to number\r\n//    const ageNumber = parseInt(age, 10);\r\n//\r\n//    // Client-side validation first\r\n//    if (isNaN(ageNumber) || ageNumber < 16) {\r\n//      toast.error('Employee must be at least 16 years old.');\r\n//      return;\r\n//    }\r\n//\r\n//    // Proceed with updating employee\r\n//    axios.put(`http://localhost:8000/employees/${id}`, {\r\n//      name,\r\n//      age: ageNumber,\r\n//      department\r\n//    })\r\n//    .then(response => {\r\n//      // Refresh the employee list\r\n//      fetchEmployees();\r\n//\r\n//      // Reset editing state\r\n//      setIsEditing(false);\r\n//\r\n//      // Success notification\r\n//      toast.success('Employee updated successfully!');\r\n//    })\r\n//    .catch(error => {\r\n//      // Detailed error handling\r\n//      if (error.response) {\r\n//        const errorMessage = error.response.data.detail || 'Failed to update employee!';\r\n//        toast.error(errorMessage);\r\n//        console.error('Server Error:', error.response.data);\r\n//      } else if (error.request) {\r\n//        toast.error('No response received from server');\r\n//        console.error('No response Error:', error.request);\r\n//      } else {\r\n//        toast.error('Error setting up the request');\r\n//        console.error('Error:', error.message);\r\n//      }\r\n//    });\r\n//  };\r\n//\r\n//  // Handle adding new employee\r\n//  const handleSubmitAdd = (e) => {\r\n//    e.preventDefault();\r\n//    const { name, age, department } = currentEmployee;\r\n//\r\n//    // Convert age to number\r\n//    const ageNumber = parseInt(age, 10);\r\n//\r\n//    // Client-side validation first\r\n//    if (isNaN(ageNumber) || ageNumber < 16) {\r\n//      toast.error('Employee must be at least 16 years old.');\r\n//      return;\r\n//    }\r\n//\r\n//    axios.post('http://localhost:8000/employees/', { name, age: ageNumber, department })\r\n//      .then(response => {\r\n//        fetchEmployees();\r\n//        setIsEditing(false);\r\n//        toast.success('Employee added successfully!');\r\n//      })\r\n//      .catch(error => {\r\n//        console.error('There was an error adding the employee!', error);\r\n//\r\n//        // Comprehensive error handling\r\n//        if (error.response) {\r\n//          // The request was made and the server responded with a status code\r\n//          // that falls out of the range of 2xx\r\n//          if (error.response.status === 422) {\r\n//            // Validation error from Pydantic\r\n//            const errorDetails = error.response.data;\r\n//            const errorMessage = errorDetails.detail[0].msg || 'Validation failed';\r\n//            toast.error(errorMessage);\r\n//          } else {\r\n//            // Other HTTP error responses\r\n//            const errorMessage = error.response.data.detail || 'Failed to add employee!';\r\n//            toast.error(errorMessage);\r\n//          }\r\n//          console.error('Server Error:', error.response.data);\r\n//        } else if (error.request) {\r\n//          // The request was made but no response was received\r\n//          toast.error('No response received from server');\r\n//          console.error('No response Error:', error.request);\r\n//        } else {\r\n//          // Something happened in setting up the request that triggered an Error\r\n//          toast.error('Error setting up the request');\r\n//          console.error('Error:', error.message);\r\n//        }\r\n//      });\r\n//  };\r\n//\r\n//  // Handle input changes in the form\r\n//  const handleChange = (e) => {\r\n//    const { name, value } = e.target;\r\n//    setCurrentEmployee(prevState => ({\r\n//      ...prevState,\r\n//      [name]: value\r\n//    }));\r\n//  };\r\n//\r\n//  // Handle clearing the form fields\r\n//  const handleClearForm = () => {\r\n//    setCurrentEmployee({\r\n//      id: null,\r\n//      name: '',\r\n//      age: '',\r\n//      department: ''\r\n//    });\r\n//    setIsEditing(false);\r\n//  };\r\n//\r\n//  return (\r\n//    <div className='employee-list-container'>\r\n//      <h2 className='employee-list-heading'>Employee List</h2>\r\n//\r\n//      {/* Employee List */}\r\n//      <div className='employee-cards-container'>\r\n//        {employees.map(employee =>\r\n//          <div key={employee.id} className='employee-card'>\r\n//            <h3>{employee.name}</h3>\r\n//            <p><strong>ID: </strong>{employee.id}</p>\r\n//            <p><strong>Age: </strong>{employee.age}</p>\r\n//            <p><strong>Department: </strong>{employee.department}</p>\r\n//            <div className='employee-card-actions'>\r\n//              <button\r\n//                className='btn-delete'\r\n//                onClick={() => handleDelete(employee.id)}\r\n//              >\r\n//                Delete\r\n//              </button>\r\n//              <button\r\n//                className='btn-update'\r\n//                onClick={() => handleUpdate(employee)}\r\n//              >\r\n//                Update\r\n//              </button>\r\n//            </div>\r\n//          </div>\r\n//        )}\r\n//      </div>\r\n//\r\n//      {/* Edit or Add Form Modal */}\r\n//      {isEditing &&\r\n//        <div className='modal'>\r\n//          <div className='modal-content'>\r\n//            <h3>{currentEmployee.id ? 'Edit Employee' : 'Add Employee'}</h3>\r\n//            <form onSubmit={currentEmployee.id ? handleSubmitUpdate : handleSubmitAdd}>\r\n//              <label>\r\n//                Name:\r\n//                <input\r\n//                  type='text'\r\n//                  name='name'\r\n//                  value={currentEmployee.name}\r\n//                  onChange={handleChange}\r\n//                  required\r\n//                />\r\n//              </label>\r\n//              <label>\r\n//                Age:\r\n//                <input\r\n//                  type='number'\r\n//                  name='age'\r\n//                  value={currentEmployee.age}\r\n//                  onChange={handleChange}\r\n//                  required\r\n//                  min='16'\r\n//                />\r\n//              </label>\r\n//              <label>\r\n//                Department:\r\n//                <input\r\n//                  type='text'\r\n//                  name='department'\r\n//                  value={currentEmployee.department}\r\n//                  onChange={handleChange}\r\n//                  required\r\n//                />\r\n//              </label>\r\n//              <div className='modal-buttons'>\r\n//                <button type='submit'>Save Changes</button>\r\n//                <button type='button' onClick={handleClearForm}>Clear</button>\r\n//                <button type='button' onClick={() => setIsEditing(false)}>Cancel</button>\r\n//              </div>\r\n//            </form>\r\n//          </div>\r\n//        </div>\r\n//      }\r\n//\r\n//      {/* Toast Notifications */}\r\n//      <ToastContainer position='top-right' autoClose={5000} hideProgressBar={false} />\r\n//    </div>\r\n//  );\r\n//};\r\n//\r\n//export default EmployeeList;\r\n\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport './EmployeeList.css';\r\n\r\nconst EmployeeList = () => {\r\n  const [employees, setEmployees] = useState([]);\r\n  const [isEditing, setIsEditing] = useState(false);\r\n  const [currentEmployee, setCurrentEmployee] = useState({\r\n    id: null,\r\n    name: '',\r\n    age: '',\r\n    department: ''\r\n  });\r\n\r\n  useEffect(() => {\r\n    fetchEmployees();\r\n  }, []);\r\n\r\n  const fetchEmployees = () => {\r\n    axios.get('http://localhost:8000/employees/')\r\n      .then(response => setEmployees(response.data))\r\n      .catch(() => toast.error('Failed to fetch employees!'));\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    axios.delete(`http://localhost:8000/employees/deleteemployees/${id}`)\r\n      .then(() => {\r\n        setEmployees(employees.filter(emp => emp.id !== id));\r\n        toast.success('Employee deleted successfully!');\r\n      })\r\n      .catch(() => toast.error('Failed to delete employee!'));\r\n  };\r\n\r\n  const handleUpdate = (employee) => {\r\n    setIsEditing(true);\r\n    setCurrentEmployee({ ...employee });\r\n  };\r\n\r\n  const handleOpenAddModal = () => {\r\n    setCurrentEmployee({ id: null, name: '', age: '', department: '' });\r\n    setIsEditing(true);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { id, name, age, department } = currentEmployee;\r\n    const ageNumber = parseInt(age, 10);\r\n\r\n    if (isNaN(ageNumber) || ageNumber < 16 || ageNumber > 100) {\r\n      toast.error('Age must be between 16 and 100.');\r\n      return;\r\n    }\r\n\r\n    const apiCall = id ? axios.put(`http://localhost:8000/employees/updateemployees/${id}`, { name, age: ageNumber, department }) : axios.post(`http://localhost:8000/employees/addemployees/${id}`, { name, age: ageNumber, department });\r\n\r\n    apiCall\r\n      .then(() => {\r\n        fetchEmployees();\r\n        setIsEditing(false);\r\n        toast.success(`Employee ${id ? 'updated' : 'added'} successfully!`);\r\n      })\r\n      .catch(err => toast.error(err.response?.data?.detail || 'Operation failed!'));\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setCurrentEmployee(prev => ({ ...prev, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <div className='employee-list-container'>\r\n      <h2>Employee List</h2>\r\n      <button onClick={handleOpenAddModal}>Add Employee</button>\r\n\r\n      <div className='employee-cards'>\r\n        {employees.map(emp => (\r\n          <div key={emp.id} className='employee-card'>\r\n            <h3>{emp.name}</h3>\r\n            <p>Age: {emp.age}</p>\r\n            <p>Department: {emp.department}</p>\r\n            <button onClick={() => handleUpdate(emp)}>Update</button>\r\n            <button onClick={() => handleDelete(emp.id)}>Delete</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {isEditing && (\r\n        <div className='modal'>\r\n          <div className='modal-content'>\r\n            <form onSubmit={handleSubmit}>\r\n              <input type='text' name='name' value={currentEmployee.name} onChange={handleChange} placeholder='Name' required />\r\n              <input type='number' name='age' value={currentEmployee.age} onChange={handleChange} placeholder='Age' required min='16' max='100' />\r\n              <input type='text' name='department' value={currentEmployee.department} onChange={handleChange} placeholder='Department' required />\r\n              <button type='submit'>Save</button>\r\n              <button type='button' onClick={() => setIsEditing(false)}>Cancel</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <ToastContainer position='top-right' autoClose={5000} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmployeeList;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}