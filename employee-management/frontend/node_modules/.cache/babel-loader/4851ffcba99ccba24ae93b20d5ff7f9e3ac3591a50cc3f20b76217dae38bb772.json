{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\DELL\\\\PycharmProjects\\\\Abrar\\\\employee-management\\\\frontend\\\\src\\\\components\\\\EmployeeForm.js\",\n  _s = $RefreshSig$();\n// src/components/EmployeeForm.js\nimport React, { useState, useEffect } from \"react\";\nimport { createEmployee, updateEmployee, getEmployeeById } from \"../api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst EmployeeForm = ({\n  employeeId,\n  onSave\n}) => {\n  _s();\n  const [employee, setEmployee] = useState({\n    name: \"\",\n    position: \"\",\n    department: \"\",\n    salary: 0\n  });\n\n  // If editing, fetch the employee data from the API\n  useEffect(() => {\n    if (employeeId) {\n      getEmployeeById(employeeId).then(response => setEmployee(response.data)).catch(error => console.error(\"Error fetching employee:\", error));\n    }\n  }, [employeeId]); // Fetch employee data when employeeId changes\n\n  const handleChange = e => {\n    setEmployee({\n      ...employee,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (employeeId) {\n      // If employeeId exists, update the employee\n      updateEmployee(employeeId, employee).then(response => onSave(response.data)) // Notify parent to update employee list\n      .catch(error => console.error(\"Error updating employee:\", error));\n    } else {\n      // If no employeeId, create a new employee\n      createEmployee(employee).then(response => onSave(response.data)) // Notify parent to add employee to list\n      .catch(error => console.error(\"Error adding employee:\", error));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: employee.name,\n      onChange: handleChange,\n      placeholder: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"position\",\n      value: employee.position,\n      onChange: handleChange,\n      placeholder: \"Position\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"department\",\n      value: employee.department,\n      onChange: handleChange,\n      placeholder: \"Department\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"salary\",\n      value: employee.salary,\n      onChange: handleChange,\n      placeholder: \"Salary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: employeeId ? \"Update Employee\" : \"Save Employee\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n_s(EmployeeForm, \"iZxGlCqaRHs54zd0LFwLEdoQr8g=\");\n_c = EmployeeForm;\nexport default EmployeeForm;\nvar _c;\n$RefreshReg$(_c, \"EmployeeForm\");","map":{"version":3,"names":["React","useState","useEffect","createEmployee","updateEmployee","getEmployeeById","jsxDEV","_jsxDEV","EmployeeForm","employeeId","onSave","_s","employee","setEmployee","name","position","department","salary","then","response","data","catch","error","console","handleChange","e","target","value","handleSubmit","preventDefault","onSubmit","children","type","onChange","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/DELL/PycharmProjects/Abrar/employee-management/frontend/src/components/EmployeeForm.js"],"sourcesContent":["// src/components/EmployeeForm.js\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { createEmployee, updateEmployee, getEmployeeById } from \"../api\";\r\n\r\nconst EmployeeForm = ({ employeeId, onSave }) => {\r\n    const [employee, setEmployee] = useState({\r\n        name: \"\",\r\n        position: \"\",\r\n        department: \"\",\r\n        salary: 0,\r\n    });\r\n\r\n    // If editing, fetch the employee data from the API\r\n    useEffect(() => {\r\n        if (employeeId) {\r\n            getEmployeeById(employeeId)\r\n                .then((response) => setEmployee(response.data))\r\n                .catch((error) => console.error(\"Error fetching employee:\", error));\r\n        }\r\n    }, [employeeId]); // Fetch employee data when employeeId changes\r\n\r\n    const handleChange = (e) => {\r\n        setEmployee({ ...employee, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (employeeId) {\r\n            // If employeeId exists, update the employee\r\n            updateEmployee(employeeId, employee)\r\n                .then((response) => onSave(response.data))  // Notify parent to update employee list\r\n                .catch((error) => console.error(\"Error updating employee:\", error));\r\n        } else {\r\n            // If no employeeId, create a new employee\r\n            createEmployee(employee)\r\n                .then((response) => onSave(response.data))  // Notify parent to add employee to list\r\n                .catch((error) => console.error(\"Error adding employee:\", error));\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                name=\"name\"\r\n                value={employee.name}\r\n                onChange={handleChange}\r\n                placeholder=\"Name\"\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                name=\"position\"\r\n                value={employee.position}\r\n                onChange={handleChange}\r\n                placeholder=\"Position\"\r\n            />\r\n            <input\r\n                type=\"text\"\r\n                name=\"department\"\r\n                value={employee.department}\r\n                onChange={handleChange}\r\n                placeholder=\"Department\"\r\n            />\r\n            <input\r\n                type=\"number\"\r\n                name=\"salary\"\r\n                value={employee.salary}\r\n                onChange={handleChange}\r\n                placeholder=\"Salary\"\r\n            />\r\n            <button type=\"submit\">{employeeId ? \"Update Employee\" : \"Save Employee\"}</button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default EmployeeForm;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}